# Copyright (C) 2006 International Business Machines and others.
# All Rights Reserved.
# This file is distributed under the Common Public License.

## $Id$

# Author:  Andreas Waechter           IBM    2006-04-13

AUTOMAKE_OPTIONS = foreign

########################################################################
#                         unitTest for Coin                            #
########################################################################

noinst_PROGRAMS = unitTest

unitTest_SOURCES = unitTest.cpp

# List libraries of COIN projects
unitTest_LDADD = ../src/libCgl.la

# Here list all include flags, relative to this "srcdir" directory.  This
# "cygpath" stuff is necessary to compile with native compilers on Windows
AM_CPPFLAGS = $(COINUTILS_CFLAGS) $(OSI_CFLAGS) \
	-I`$(CYGPATH_W) $(srcdir)/../src` \
	-I`$(CYGPATH_W) $(srcdir)/../src/CglFlowCover` \
	-I`$(CYGPATH_W) $(srcdir)/../src/CglGomory` \
	-I`$(CYGPATH_W) $(srcdir)/../src/CglKnapsackCover` \
        -I`$(CYGPATH_W) $(srcdir)/../src/CglLandP` \
	-I`$(CYGPATH_W) $(srcdir)/../src/CglOddHole` \
	-I`$(CYGPATH_W) $(srcdir)/../src/CglProbing` \
	-I`$(CYGPATH_W) $(srcdir)/../src/CglMixedIntegerRounding` \
	-I`$(CYGPATH_W) $(srcdir)/../src/CglMixedIntegerRounding2` \
	-I`$(CYGPATH_W) $(srcdir)/../src/CglResidualCapacity` \
	-I`$(CYGPATH_W) $(srcdir)/../src/CglRedSplit` \
	-I`$(CYGPATH_W) $(srcdir)/../src/CglTwomir` \
	-I`$(CYGPATH_W) $(srcdir)/../src/CglClique` \
	-I`$(CYGPATH_W) $(srcdir)/../src/CglSimpleRounding`
if COIN_HAS_SAMPLE
AM_CPPFLAGS += -DSAMPLEDIR=\"@SAMPLE_DATA@\"
endif

# This line is necessary to allow VPATH compilation with MS compilers
# on Cygwin
DEFAULT_INCLUDES = -I. -I`$(CYGPATH_W) $(srcdir)` -I$(top_builddir)/inc

# Depending of what solvers are available, we add the corresponding files,
# libraries and include dirs

# Depending of what solvers are available, we add the corresponding files,
# libraries and include dirs

if COIN_HAS_CLP
  AM_CPPFLAGS += $(CLP_CFLAGS)
  unitTest_LDADD += $(CLP_LIBS)
endif

if COIN_HAS_OSICPX
  AM_CPPFLAGS += $(OSICPX_CFLAGS)
  unitTest_LDADD += $(OSICPX_LIBS)
endif

if COIN_HAS_OSIDYLP
  AM_CPPFLAGS += $(OSIDYLP_CFLAGS)
  unitTest_LDADD += $(OSIDYLP_LIBS)
endif

if COIN_HAS_OSIGLPK
  AM_CPPFLAGS += $(OSIGLPK_CFLAGS)
  unitTest_LDADD += $(OSIGLPK_LIBS)
endif

if COIN_HAS_OSIMSK
  AM_CPPFLAGS += $(OSIMSK_CFLAGS)
  unitTest_LDADD += $(OSIMSK_LIBS)
endif

# if COIN_HAS_SPX
#   AM_CPPFLAGS += $(OSISPX_CFLAGS)
#   unitTest_LDADD += $(OSISPX_LIBS)
# endif

if COIN_HAS_OSIVOL
  AM_CPPFLAGS += $(OSIVOL_CFLAGS)
  unitTest_LDADD += $(OSIVOL_LIBS)
endif

if COIN_HAS_OSIXPR
  AM_CPPFLAGS += $(OSIXPR_CFLAGS)
  unitTest_LDADD += $(OSIXPR_LIBS)
endif

# Finally the Coin library (many of the above need it)
unitTest_LDADD += $(OSI_LIBS) $(COINUTILS_LIBS)

test: unitTest$(EXEEXT)
	./unitTest$(EXEEXT)

.PHONY: test

########################################################################
#                          Cleaning stuff                              #
########################################################################

# Here we list everything that is not generated by the compiler, e.g.,
# output files of a program

DISTCLEANFILES =
